Lab 8 CS 152
Names: Jason Thai 010954385, Vincent Diep 007329959

Step 0:
Complete

Step 1:

1-2: [1.10] parsed: ((3~None)~Some((-~((4~Some((*~(5~None))))~None))))

1-3: [1.10] parsed: ((3~Some((*~(4~None))))~Some((-~((5~None)~None))))

1-4: This indicates the grammer "knows" the multiplication is binded more strongly because it is
deeper within the layer of parenthesis (to be evaluated first).

1-5: 
Input:
3 * 6 * (4 + 5)
Output:
[1.16] parsed: ((3~Some((*~(6~Some((*~((((~((4~None)~Some((+~((5~None)~None)))))~))~None)))))))~None)

1-6: 
Input: a+b
Output: [1.1] failure: `(' expected but `a' found

a+b
^

Step 2:

2-2: 3-4*5 = -17; 3*4-5 = 7.

2-3: The eval function EVALUATES the input and returns the answer.

2-4: 
Input: (3 + 4) * 5
Output: Error.

Step 3:

3-2: (((val~x)~=)~((3~None)~None))

